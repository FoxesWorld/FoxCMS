{
  "version": 3,
  "sources": ["../options/Settings.js", "../modules/JsonArrConfig.js", "../modules/BuildField.js", "../options/userOptions/EditBalance.js", "../options/userOptions/EditBadges.js", "../options/Users.js", "../options/Permissions.js", "../options/serverOptions/EditServerMods.js", "../options/serverOptions/EditServer.js", "../options/Servers.js", "../options/EditInfoBox.js", "../options/EditAllBadges.js", "../AdminPanel.js"],
  "sourcesContent": ["export class Settings {\n    constructor() {}\n\n    async parseSettings() {\n        let response = await foxEngine.sendPostAndGetAnswer({\n            admPanel: \"cfgParse\"\n        }, \"TEXT\");\n\n        $(\"#adminContent\").html(response);\n    }\n\t\n    async addContent() {\n\n    }\n}", "/**\r\n * @fileoverview FoxesWorld for FoxesCraft\r\n * \r\n * This file contains the JsonArrConfig class, which handles JSON arrays and interacts with them.\r\n * It provides methods for opening a window with fields of a JSON config,\r\n * and updating mod information on the server.\r\n * \r\n * Authors: FoxesWorld\r\n * Date: [10.05.24]\r\n * Version: [1.6.9]\r\n */\r\n\r\n/**\r\n * The JsonArrConfig class handles JSON arrays and interacts with them.\r\n */\r\nexport class JsonArrConfig {\r\n    constructor(jsonAttributes, submitHandler, buildField) {\r\n        this.postData;\r\n        this.jsonAttributes = jsonAttributes;\r\n        this.submitHandler = submitHandler;\r\n        if (buildField) {\r\n            this.buildField = buildField;\r\n        }\r\n        this.editRows = true;\r\n\r\n        this.charactersToRemove = ['\\n', '\\t'];\r\n\t\t/*\r\n        this.dialogOptions = {\r\n            autoOpen: false,\r\n            position: {\r\n                my: 'center',\r\n                at: 'top',\r\n                of: window\r\n            },\r\n            modal: true,\r\n            height: 'auto',\r\n            width: '900',\r\n            resizable: false,\r\n            open: (event, ui) => {}\r\n        };\r\n\t\t*/\r\n    }\r\n    \r\n    calculateTextareaHeight(value) {\r\n        const minHeight = 100;\r\n        const calculatedHeight = Math.max(minHeight, value.length / 2);\r\n        return calculatedHeight;\r\n    }\r\n\r\n    async openFormWindow(configArray, serverName, postData) {\r\n        this.postData = postData;\r\n        try {\r\n            let JsonArray;\r\n\r\n            if (configArray) {\r\n                if (typeof configArray === 'string') {\r\n                    JsonArray = JSON.parse(configArray);\r\n                } else {\r\n                    JsonArray = configArray;\r\n                }\r\n            } else {\r\n                this.loadFormIntoDialog('', serverName);\r\n                return;\r\n            }\r\n            \r\n            const builtFormHtml = await this.genJsonCfgForm(JsonArray);\r\n\r\n            this.loadFormIntoDialog(builtFormHtml, serverName);\r\n\r\n            setTimeout(() => {\r\n                $('#submitBtn').click(async () => {\r\n                    await this.submitHandler($('#submitBtn'), serverName);\r\n                });\r\n\r\n                // Adding remove listener to existing rows\r\n                $('#jsonConfigForm').on('click', '.removeBtn', (e) => {\r\n                    const index = $(e.currentTarget).data('index');\r\n                    $('#jsonConfigForm tbody tr:eq(' + index + ')').remove();\r\n                    this.updateArrayIndexes();\r\n                });\r\n\r\n                $('#addRowBtn').click(() => {\r\n                    this.addRow();\r\n                    this.updateArrayIndexes();\r\n                });\r\n            }, 1000);\r\n        } catch (error) {\r\n            console.error('An error occurred:', error.message);\r\n        }\r\n    }\r\n\r\n    async genJsonCfgForm(JsonArray) {\r\n        return Promise.all(JsonArray.map((element, index) => this.genFormRow(index, element)))\r\n            .then(rows => {\r\n                const builtFormHtml = `<form id=\"jsonConfigForm\">\r\n                    <table cellpadding=\"${this.jsonAttributes.length}\" class=\"table table-bordered table-striped\">\r\n                        <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                ${this.jsonAttributes.map(attribute => `<th>${attribute}</th>`).join('')}\r\n                                ${this.editRows ? '<th>Action</th>' : ''}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            ${rows.join('')}\r\n                        </tbody>\r\n                    </table>\r\n                    <div class=\"buttonGroup\">\r\n                        <button type=\"button\" id=\"submitBtn\" class=\"btn btn-success\">Save</button>\r\n                        ${this.editRows ? '<button type=\"button\" id=\"addRowBtn\" class=\"btn btn-primary\">Add Row</button>' : ''}\r\n                    </div>\r\n                </form>`;\r\n\r\n                return builtFormHtml;\r\n            });\r\n    }\r\n\r\n    async genFormRow(index, row) {\r\n        const rowHeight = this.calculateRowHeight(row);\r\n        let formHtml = `<tr>\r\n                            <td>${index + 1}</td>`;\r\n        if (this.buildField) {\r\n            formHtml += await this.buildFieldInput(row);\r\n        } else {\r\n            formHtml += this.buildDefaultInput(index, row, rowHeight);\r\n        }\r\n\r\n        if (this.editRows) {\r\n            formHtml += `<td><button type=\"button\" class=\"btn btn-danger removeBtn\" data-index=\"${index}\">Remove</button></td></tr>`;\r\n        }\r\n        \r\n        return formHtml;\r\n    }\r\n    \r\n    async buildFieldInput(row) {\r\n        let html = '';\r\n        for (let i = 0; i < this.buildField.inputFields.length; i++) {\r\n            const { fieldName, fieldType, optionsArray } = this.buildField.inputFields[i];\r\n            if (row[fieldName] !== undefined) {\r\n                const inputValue = row[fieldName] || '';\r\n                const inputHtml = await this.buildField.createInputBlock(fieldName, inputValue, fieldType, optionsArray);\r\n                html += `<td>${inputHtml}</td>`;\r\n            }\r\n        }\r\n        return html;\r\n    }\r\n\r\n    buildDefaultInput(index, row, rowHeight) {\r\n        return this.jsonAttributes.map(attribute => {\r\n            const inputValue = row[attribute] || '';\r\n            const isTextarea = inputValue.length > 60;\r\n            const inputType = isTextarea ? 'textarea' : 'input';\r\n            const inputHeight = isTextarea ? rowHeight : this.calculateTextareaHeight(inputValue);\r\n\r\n            return `<td>\r\n                        <div class=\"input_block\">\r\n                            <${inputType} class=\"input\" id=\"${attribute}_input${index}\" name=\"${attribute}\" data-index=\"${index}\" style=\"${isTextarea ? 'height: ' + inputHeight + 'px; width: 100%; box-sizing: border-box;' : 'height: ' + inputHeight / 2 + 'px;'}\"\r\n                                ${inputType === 'input' ? `value=\"${inputValue}\"` : ''}>\r\n                                ${inputType === 'textarea' ? `${this.removeCharacters(inputValue)}` : ''}\r\n                            </${inputType}>\r\n                        </div>\r\n                    </td>`;\r\n        }).join('');\r\n    }\r\n\r\n    calculateRowHeight(row) {\r\n        const heights = this.jsonAttributes.map(attribute => this.calculateTextareaHeight(row[attribute] || ''));\r\n        return Math.max(...heights) * 2;\r\n    }\r\n\r\nasync addRow() {\r\n\t// \u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0442\u0440\u043E\u043A\r\n\tconst rowCount = $('#jsonConfigForm tbody tr').length;\r\n\r\n\t// \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043D\u043E\u0432\u043E\u0439 \u0441\u0442\u0440\u043E\u043A\u0438-\u043E\u0431\u044A\u0435\u043A\u0442\u0430 \u0441 \u043F\u0443\u0441\u0442\u044B\u043C\u0438 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C\u0438\r\n\tconst newRow = {};\r\n\tthis.jsonAttributes.forEach(attribute => {\r\n\t\tnewRow[attribute] = '';\r\n\t});\r\n\r\n\t// \u0413\u0435\u043D\u0435\u0440\u0430\u0446\u0438\u044F HTML \u0441\u0442\u0440\u043E\u043A\u0438\r\n\tconst newHtml = await this.genFormRow(rowCount, newRow);\r\n\r\n\t// \u0423\u0431\u0435\u0434\u0438\u043C\u0441\u044F, \u0447\u0442\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0441\u0442\u0440\u043E\u043A \u043D\u0435 \u0438\u0437\u043C\u0435\u043D\u0438\u043B\u043E\u0441\u044C \u0432\u043E \u0432\u0440\u0435\u043C\u044F \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F\r\n\tif ($('#jsonConfigForm tbody tr').length === rowCount) {\r\n\t\t// \u041E\u0431\u043E\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043C HTML \u0432 jQuery-\u043E\u0431\u044A\u0435\u043A\u0442 \u0438 \u0441\u043A\u0440\u044B\u0432\u0430\u0435\u043C\r\n\t\tconst $newRow = $(newHtml).css('display', 'none');\r\n\r\n\t\t// \u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u0432 DOM \u0438 \u043F\u0440\u0438\u043C\u0435\u043D\u044F\u0435\u043C \u044D\u0444\u0444\u0435\u043A\u0442 \u043F\u043E\u044F\u0432\u043B\u0435\u043D\u0438\u044F\r\n\t\t$('#jsonConfigForm tbody').append($newRow);\r\n\t\t$newRow.fadeIn(200); // 200\u043C\u0441 - \u0441\u043A\u043E\u0440\u043E\u0441\u0442\u044C \u043F\u043E\u044F\u0432\u043B\u0435\u043D\u0438\u044F\r\n\r\n\t\t// \u041D\u0430\u0437\u043D\u0430\u0447\u0430\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F (\u0435\u0441\u043B\u0438 \u0435\u0449\u0451 \u043D\u0435 \u043D\u0430\u0437\u043D\u0430\u0447\u0435\u043D)\r\n\t\t$('#jsonConfigForm').off('click', '.removeBtn').on('click', '.removeBtn', (e) => {\r\n\t\t\tconst indexToRemove = $(e.currentTarget).data('index');\r\n\t\t\tconst $row = $('#jsonConfigForm tbody tr').eq(indexToRemove);\r\n\r\n\t\t\t// \u041F\u043B\u0430\u0432\u043D\u043E\u0435 \u0438\u0441\u0447\u0435\u0437\u043D\u043E\u0432\u0435\u043D\u0438\u0435, \u0437\u0430\u0442\u0435\u043C \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435\r\n\t\t\t$row.fadeOut(200, () => {\r\n\t\t\t\t$row.remove();\r\n\t\t\t\tthis.updateArrayIndexes();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n\r\n    updateArrayIndexes() {\r\n        $('#jsonConfigForm tbody tr').each((i, tr) => {\r\n            $(tr).find('td:first').text(i + 1);\r\n            $(tr).find('.removeBtn').attr('data-index', i);\r\n        });\r\n    }\r\n\r\n    loadFormIntoDialog(formHtml, dialogTitle) {\r\n        //foxEngine.page.loadData(formHtml, '#dialogContent');\r\n\t\tfoxEngine.modalApp.showModalApp(\"100%\", dialogTitle, formHtml, () => {});\r\n        //$(\"#dialog\").dialog(this.dialogOptions);\r\n        //$(\"#dialog\").dialog({ title: dialogTitle });\r\n        //$(\"#dialog\").dialog('open');\r\n    }\r\n\r\n    async updateJsonConfig(sendKey) {\r\n        const formDataArray = [];\r\n\r\n        $('#jsonConfigForm tbody tr').each(function() {\r\n            const formData = {};\r\n\r\n            $(this).find('input, select, textarea').each(function() {\r\n                const fieldName = $(this).attr('name');\r\n                if (fieldName) {\r\n                    let fieldValue;\r\n\r\n                    if ($(this).is(':checkbox')) {\r\n                        fieldValue = $(this).prop('checked') ? true : false;\r\n                    } else {\r\n                        fieldValue = $(this).val();\r\n                    }\r\n\r\n                    formData[fieldName] = fieldValue;\r\n                }\r\n            });\r\n\r\n            if (Object.keys(formData).length > 0) {\r\n                formDataArray.push(formData);\r\n            }\r\n        });\r\n\r\n        let req = {\r\n            ...this.postData,\r\n        };\r\n        req[sendKey] = JSON.stringify(formDataArray);\r\n        let answer = await foxEngine.sendPostAndGetAnswer(req, \"JSON\");\r\n        return answer;\r\n    }\r\n\r\n    removeCharacters(value) {\r\n        let cleanedValue = value;\r\n        this.charactersToRemove.forEach(char => {\r\n            cleanedValue = cleanedValue.replace(new RegExp(char, 'g'), '');\r\n        });\r\n        return cleanedValue;\r\n    }\r\n    \r\n    setEditRows(editRows) {\r\n        this.editRows = editRows;\r\n    }\r\n}", "/**\r\n * @fileoverview BuildField class for FoxesCraft\r\n * \r\n * \u042D\u0442\u043E\u0442 \u043A\u043B\u0430\u0441\u0441 \u0441\u043E\u0437\u0434\u0430\u0451\u0442 \u0434\u0438\u043D\u0430\u043C\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u043F\u043E\u043B\u044F \u0432\u0432\u043E\u0434\u0430 \u043D\u0430 \u043E\u0441\u043D\u043E\u0432\u0435 \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\r\n * \u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043F\u043E\u043B\u044F: \u0442\u0435\u043A\u0441\u0442, \u0447\u0438\u0441\u043B\u043E, \u0432\u044B\u043F\u0430\u0434\u0430\u044E\u0449\u0438\u0439 \u0441\u043F\u0438\u0441\u043E\u043A, \u0447\u0435\u043A\u0431\u043E\u043A\u0441, textarea, tagify \u0438 date-picker.\r\n * \r\n * \u0410\u0432\u0442\u043E\u0440\u044B: AidenFox\r\n * \u0414\u0430\u0442\u0430: [13.04.25]\r\n * \u0412\u0435\u0440\u0441\u0438\u044F: 2.2.0\r\n */\r\nexport class BuildField {\r\n    constructor(classInstance, options = {}) {\r\n        this.classInstance = classInstance;\r\n        this.inputFields = classInstance.formFields || [];\r\n        this.initAwait = options.initAwait || 600;\r\n        \r\n        // \u0411\u0430\u0437\u043E\u0432\u044B\u0435 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u0434\u043B\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u043F\u043E\u043B\u0435\u0439 \u0432\u0432\u043E\u0434\u0430\r\n        this.defaultHandlers = {\r\n            label: this.createLabel.bind(this),\r\n            text: this.createTextInput.bind(this),\r\n            number: this.createNumberInput.bind(this),\r\n            dropdown: this.createDropdown.bind(this),\r\n            checkbox: this.createCheckboxInput.bind(this),\r\n            textarea: this.createTextareaInput.bind(this),\r\n            tagify: this.createTagifyInput.bind(this),\r\n            date: this.createDatePickerInput.bind(this),\r\n        };\r\n        // \u041F\u043E\u0437\u0432\u043E\u043B\u044F\u0435\u0442 \u043F\u0435\u0440\u0435\u043E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0442\u044C \u0438\u043B\u0438 \u0434\u043E\u0431\u0430\u0432\u043B\u044F\u0442\u044C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438\r\n        this.handlers = { ...this.defaultHandlers, ...(options.customHandlers || {}) };\r\n\r\n        // \u0414\u043B\u044F \u043E\u0431\u0435\u0441\u043F\u0435\u0447\u0435\u043D\u0438\u044F \u0435\u0434\u0438\u043D\u043E\u0440\u0430\u0437\u043E\u0432\u043E\u0439 \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044F\r\n        // \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u0432\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u0430\u044F \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0447\u0435\u0440\u0435\u0437 data-\u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044B \u0432 DOM \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u0445.\r\n    }\r\n\r\n    /**\r\n     * \u0423\u043D\u0438\u0444\u0438\u0446\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u043C\u0435\u0442\u043E\u0434 \u0434\u043B\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u043B\u043E\u043A\u0430 \u0441 \u043F\u043B\u0430\u0432\u0430\u044E\u0449\u0435\u0439 \u043C\u0435\u0442\u043A\u043E\u0439.\r\n     * \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442 \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u0439 id \u0434\u043B\u044F \u043F\u043E\u043B\u0435\u0439, \u0433\u0434\u0435 \u044D\u0442\u043E \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E.\r\n     * @param {string} fieldName - \u0438\u043C\u044F \u043F\u043E\u043B\u044F.\r\n     * @param {string} value - \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435.\r\n     * @param {string} type - \u0442\u0438\u043F \u0438\u043D\u043F\u0443\u0442\u0430.\r\n     * @param {string} [id=fieldName] - \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430.\r\n     * @returns {string} HTML-\u043A\u043E\u0434 \u0431\u043B\u043E\u043A\u0430.\r\n     */\r\n    _createFloatingInput(fieldName, value, type = 'text', id = fieldName) {\r\n        return `\r\n            <div class=\"form-floating mb-3\">\r\n                <input type=\"${type}\" class=\"form-control\" name=\"${fieldName}\" id=\"${id}\" placeholder=\"%lang|${fieldName}%\" value=\"${value}\">\r\n                <label for=\"${id}\">${fieldName}</label>\r\n            </div>`;\r\n    }\r\n\r\n    /**\r\n     * \u0423\u043D\u0438\u0444\u0438\u0446\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u043C\u0435\u0442\u043E\u0434 \u0434\u043B\u044F \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u043D\u043E\u0433\u043E \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F.\r\n     * @param {function} callback - \u0444\u0443\u043D\u043A\u0446\u0438\u044F, \u043A\u043E\u0442\u043E\u0440\u0443\u044E \u0441\u043B\u0435\u0434\u0443\u0435\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u0438\u0442\u044C.\r\n     * @param {number} [delay=this.initAwait] - \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0430 \u0432 \u043C\u0441.\r\n     */\r\n    _runAfterDelay(callback, delay = this.initAwait) {\r\n        setTimeout(callback, delay);\r\n    }\r\n\r\n    /**\r\n     * \u0412\u044B\u043F\u043E\u043B\u043D\u0438\u0442\u044C \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0442\u043E\u043B\u044C\u043A\u043E \u043E\u0434\u0438\u043D \u0440\u0430\u0437.\r\n     * @param {string} key - \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u043A\u043B\u044E\u0447 \u0434\u043B\u044F \u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0442\u043E\u0440\u0430 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, id \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430).\r\n     * @param {HTMLElement} el - DOM-\u044D\u043B\u0435\u043C\u0435\u043D\u0442, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u0442\u0441\u044F.\r\n     * @param {function} initFn - \u0444\u0443\u043D\u043A\u0446\u0438\u044F \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438.\r\n     */\r\n    _initializeOnce(key, el, initFn) {\r\n        if (el && !el.dataset.initializedFor) {\r\n            initFn();\r\n            el.dataset.initializedFor = key;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 HTML-\u0441\u0442\u0440\u0443\u043A\u0442\u0443\u0440\u044B \u0444\u043E\u0440\u043C\u044B \u0434\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0439 \u0441\u0442\u0440\u043E\u043A\u0438 \u0434\u0430\u043D\u043D\u044B\u0445.\r\n     * @param {Array} data - \u043C\u0430\u0441\u0441\u0438\u0432 \u043E\u0431\u044A\u0435\u043A\u0442\u043E\u0432 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C\u0438.\r\n     * @returns {Promise<string>} HTML \u0441\u0442\u0440\u043E\u043A \u0442\u0430\u0431\u043B\u0438\u0446\u044B.\r\n     */\r\n    async buildFormFields(data) {\r\n        const rows = await Promise.all(data.map(async (rowData) => {\r\n            let rowHtml = '<tr>';\r\n            for (const field of this.inputFields) {\r\n                const { fieldName, fieldType, optionsArray } = field;\r\n                const value = rowData[fieldName];\r\n                rowHtml += `<td>${await this.createInputBlock(fieldName, value, fieldType, optionsArray)}</td>`;\r\n            }\r\n            rowHtml += '</tr>';\r\n            return rowHtml;\r\n        }));\r\n        return rows.join('');\r\n    }\r\n    \r\n    /**\r\n     * \u041F\u043E\u0441\u0442\u0440\u043E\u0435\u043D\u0438\u0435 \u0442\u0430\u0431\u043B\u0438\u0446\u044B \u0441 \u0444\u043E\u0440\u043C\u0430\u043C\u0438 \u043D\u0430 \u043E\u0441\u043D\u043E\u0432\u0430\u043D\u0438\u0438 \u0448\u0430\u0431\u043B\u043E\u043D\u0430.\r\n     * @param {Array} fields - \u043C\u0430\u0441\u0441\u0438\u0432 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0439 \u043F\u043E\u043B\u0435\u0439.\r\n     * @param {Array} data - \u0434\u0430\u043D\u043D\u044B\u0435 \u0434\u043B\u044F \u0442\u0430\u0431\u043B\u0438\u0446\u044B.\r\n     * @param {string} rowTemplate - \u0448\u0430\u0431\u043B\u043E\u043D \u0441\u0442\u0440\u043E\u043A\u0438.\r\n     * @returns {Promise<string>} HTML \u0442\u0430\u0431\u043B\u0438\u0446\u044B.\r\n     */\r\n    async buildTable(fields, data, rowTemplate) {\r\n        const rows = await Promise.all(data.map(async (rowData, index) => {\r\n            const rowHtml = await this.renderRow(fields, { ...rowData, index }, rowTemplate);\r\n            return `<tr>${rowHtml}</tr>`;\r\n        }));\r\n        return rows.join(\"\");\r\n    }\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u043B\u043E\u043A\u0430 \u0432\u0432\u043E\u0434\u0430 \u043F\u043E\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043E\u043C \u0432\u044B\u0437\u043E\u0432\u0430 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0435\u0433\u043E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0430.\r\n     * @param {string} fieldName \r\n     * @param {string} value \r\n     * @param {string} fieldType \r\n     * @param {Array} [optionsArray] \r\n     * @returns {string} HTML-\u043A\u043E\u0434 \u0431\u043B\u043E\u043A\u0430 \u0432\u0432\u043E\u0434\u0430.\r\n     */\r\n    async createInputBlock(fieldName, value, fieldType, optionsArray) {\r\n        const handler = this.handlers[fieldType];\r\n        if (handler) {\r\n            return handler(fieldName, value, optionsArray);\r\n        } else {\r\n            console.error(`Unknown input type for field: ${fieldName}`);\r\n            return '';\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0441\u0442\u043E\u0439 \u043C\u0435\u0442\u043A\u0438.\r\n     * @param {string} fieldName \r\n     * @param {string} value \r\n     * @returns {string}\r\n     */\r\n    createLabel(fieldName, value) {\r\n        return `<b>${value}</b>`;\r\n    }\r\n\r\n    createTextInput(fieldName, value) {\r\n        return this._createFloatingInput(fieldName, value, 'text');\r\n    }\r\n\r\n    createNumberInput(fieldName, value) {\r\n        return this._createFloatingInput(fieldName, value, 'number');\r\n    }\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0432\u044B\u043F\u0430\u0434\u0430\u044E\u0449\u0435\u0433\u043E \u0441\u043F\u0438\u0441\u043A\u0430.\r\n     * @param {string} fieldName \r\n     * @param {string} value \r\n     * @param {Array} optionsArray \r\n     * @returns {string}\r\n     */\r\n    createDropdown(fieldName, value, optionsArray = []) {\r\n        const options = optionsArray.map(option =>\r\n            `<option value=\"${option}\" ${option === value ? 'selected' : ''}>${option}</option>`\r\n        ).join('');\r\n        return `\r\n            <div class=\"form-floating mb-3\">\r\n                <select id=\"${fieldName}\" name=\"${fieldName}\" class=\"form-select\">\r\n                    ${options}\r\n                </select>\r\n                <label for=\"${fieldName}\">${fieldName}</label>\r\n            </div>`;\r\n    }\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0447\u0435\u043A\u0431\u043E\u043A\u0441\u0430 \u0441 \u043E\u0442\u043B\u043E\u0436\u0435\u043D\u043D\u043E\u0439 \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0435\u0439 Switchery.\r\n     * \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u0439 id, \u0440\u0430\u0432\u043D\u044B\u0439 fieldName.\r\n     * @param {string} key \r\n     * @param {string} value \r\n     * @returns {string}\r\n     */\r\n    createCheckboxInput(key, value) {\r\n        const isChecked = value === \"true\" ? 'checked' : '';\r\n        const id = key; // \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C key \u043A\u0430\u043A \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u0439 id\r\n        const html = `\r\n            <div class=\"form-floating mb-3\">\r\n                <input type=\"checkbox\" id=\"${id}\" class=\"form-control ${id}-checkbox\" name=\"${key}\" ${isChecked} />\r\n                <label for=\"${id}\">${key}</label>\r\n            </div>`;\r\n        this._runAfterDelay(() => {\r\n            const el = document.getElementById(id);\r\n            this._initializeOnce(`${id}_switchery`, el, () => {\r\n                new Switchery(el);\r\n            });\r\n        });\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0442\u0435\u043A\u0441\u0442\u043E\u0432\u043E\u0439 \u043E\u0431\u043B\u0430\u0441\u0442\u0438 \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C CodeMirror.\r\n     * \u0414\u043B\u044F textarea \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F id \u0432 \u0432\u0438\u0434\u0435 fieldName + '_textarea'\r\n     * @param {string} fieldName \r\n     * @param {string} value \r\n     * @returns {string}\r\n     \r\ncreateTextareaInput(fieldName, value) {\r\n    const textareaId = `${fieldName}_textarea`;\r\n    const safeValue = typeof value === \"string\" ? value : \"\";\r\n\r\n    this._runAfterDelay(() => {\r\n        const textarea = document.getElementById(textareaId);\r\n        this._initializeOnce(`${textareaId}_cm`, textarea, () => {\r\n            const editor = CodeMirror.fromTextArea(textarea, {\r\n                mode: \"htmlmixed\",\r\n                lineNumbers: false, \r\n                theme: \"default\",\r\n                viewportMargin: Infinity,\r\n                lineWrapping: true\r\n            });\r\n\t\t\tconsole.log(editor);\r\n\r\n            editor.setSize(\"100%\", \"auto\");\r\n            window.addEventListener('resize', () => editor.setSize(\"100%\", \"auto\"));\r\n            editor.refresh();\r\n            editor.getWrapperElement().classList.add(\"codeHtml\", \"mb-3\");\r\n\r\n            // Sync CodeMirror -> textarea on change\r\n            //editor.on(\"change\", () => {\r\n\t\t\t//\tconsole.log(editor.getValue());\r\n            //    textarea.value = editor.getValue();\r\n            //});\r\n\r\n            // Extra sync on form submit\r\n            textarea.form?.addEventListener(\"submit\", () => {\r\n                textarea.value = editor.getValue();\r\n            });\r\n        });\r\n    });\r\n\r\n    return `\r\n        <div class=\"mb-3\" style=\"display: flex\">\r\n            <label for=\"${textareaId}\" class=\"form-label\">${fieldName}</label>\r\n            <textarea id=\"${textareaId}\" name=\"${fieldName}\" class=\"form-control d-none\" style=\"display: none;\">${safeValue}</textarea>\r\n        </div>`;\r\n}*/\r\n\r\ncreateTextareaInput(fieldName, value) {\r\n    const textareaId = `${fieldName}_textarea`;\r\n    const safeValue = typeof value === \"string\" ? value : \"\";\r\n\r\n    // \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C HTML \u0441\u0440\u0430\u0437\u0443 \u0441 \u0432\u0438\u0434\u0438\u043C\u044B\u043C textarea\r\n    return `\r\n        <div class=\"mb-3\">\r\n            <label for=\"${textareaId}\" class=\"form-label\">${fieldName}</label>\r\n            <textarea \r\n                id=\"${textareaId}\" \r\n                name=\"${fieldName}\" \r\n                class=\"form-control\" \r\n                rows=\"10\"\r\n                style=\"resize: vertical;\">${safeValue}</textarea>\r\n        </div>`;\r\n}\r\n\r\n\r\n\r\n\r\n    /**\r\n     * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043F\u043E\u043B\u044F \u0432\u0432\u043E\u0434\u0430 \u0441 Tagify.\r\n     * \u0414\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044F tagify \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u044B\u0439 id: fieldName + '_tagify'\r\n     * @param {string} fieldName \r\n     * @param {string} value \r\n     * @returns {string}\r\n     */\r\n    createTagifyInput(fieldName, value, uniqueSuffix = Math.random().toString(36).substring(2, 8)) {\r\n        const id = `${fieldName}_tagify_${uniqueSuffix}`;\r\n        this._runAfterDelay(() => {\r\n            const input = document.getElementById(id);\r\n            this._initializeOnce(`${id}_tagify`, input, () => {\r\n                new Tagify(input, {\r\n                    originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(','),\r\n                    delimiters: ','\r\n                });\r\n            });\r\n        });\r\n        return this._createFloatingInput(fieldName, value, 'text', id);\r\n    }\r\n\r\n/**\r\n * \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043F\u043E\u043B\u044F \u0432\u044B\u0431\u043E\u0440\u0430 \u0434\u0430\u0442\u044B \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C flatpickr.\r\n * \u0414\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E date-picker \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 id.\r\n * @param {string} fieldName \r\n * @param {string} value \r\n * @param {number|string} [uniqueSuffix] - \u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0441\u0443\u0444\u0444\u0438\u043A\u0441 \u0434\u043B\u044F id\r\n * @returns {string}\r\n */\r\ncreateDatePickerInput(fieldName, value, uniqueSuffix = Math.random().toString(36).substring(2, 8)) {\r\n\tconst id = `${fieldName}_date_${uniqueSuffix}`;\r\n\tconst unixInputId = `${id}_unix`;\r\n\tconst html = `\r\n\t\t<div class=\"form-floating mb-3\">\r\n\t\t\t<input type=\"hidden\" name=\"${fieldName}\" id=\"${unixInputId}\" value=\"${value}\" />\r\n\t\t\t<input type=\"text\" class=\"form-control\" id=\"${id}\" readonly />\r\n\t\t\t<label for=\"${id}\">${fieldName}:</label>\r\n\t\t</div>`;\r\n\r\n\tthis._runAfterDelay(() => {\r\n\t\tconst input = document.getElementById(id);\r\n\t\tthis._initializeOnce(`${id}_flatpickr`, input, () => {\r\n\t\t\tconst dateValue = new Date(parseInt(value, 10)) || new Date();\r\n\t\t\tflatpickr(input, {\r\n\t\t\t\tenableTime: true,\r\n\t\t\t\tdateFormat: 'd.m.Y H:i',\r\n\t\t\t\tdefaultDate: dateValue,\r\n\t\t\t\tonChange: (selectedDates) => {\r\n\t\t\t\t\tif (selectedDates.length > 0) {\r\n\t\t\t\t\t\tdocument.getElementById(unixInputId).value = selectedDates[0].getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\treturn html;\r\n}\r\n\r\n\r\n    /**\r\n     * \u0413\u0435\u043D\u0435\u0440\u0430\u0446\u0438\u044F \u0441\u0442\u0440\u043E\u043A\u0438 \u0442\u0430\u0431\u043B\u0438\u0446\u044B \u0441 \u043F\u043E\u043B\u044F\u043C\u0438, \u0437\u0430\u043C\u0435\u043D\u044F\u044F \u043F\u043B\u0435\u0439\u0441\u0445\u043E\u043B\u0434\u0435\u0440\u044B \u0432 \u0448\u0430\u0431\u043B\u043E\u043D\u0435.\r\n     * @param {Array} fields - \u043C\u0430\u0441\u0441\u0438\u0432 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0439 \u043F\u043E\u043B\u0435\u0439.\r\n     * @param {Object} rowData - \u0434\u0430\u043D\u043D\u044B\u0435 \u0441\u0442\u0440\u043E\u043A\u0438.\r\n     * @param {string} template - \u0448\u0430\u0431\u043B\u043E\u043D \u0441\u0442\u0440\u043E\u043A\u0438.\r\n     * @returns {Promise<string>} HTML \u0441\u0442\u0440\u043E\u043A\u0438.\r\n     */\r\n    async renderRow(fields, rowData, template) {\r\n        const replacements = {};\r\n        for (const field of fields) {\r\n            const { fieldName, fieldType } = field;\r\n            const value = rowData[fieldName];\r\n            replacements[fieldName] = await this.createInputBlock(fieldName, value, fieldType);\r\n        }\r\n        return foxEngine.replaceTextInTemplate(template, replacements);\r\n    }\r\n\r\n    /**\r\n     * \u0412\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u0444\u043E\u0440\u043C\u044B \u043D\u0430 \u043E\u0441\u043D\u043E\u0432\u0435 \u043F\u0440\u0430\u0432\u0438\u043B \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0438 \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u043F\u043E\u043B\u044F.\r\n     * @param {Array} fields - \u043C\u0430\u0441\u0441\u0438\u0432 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0439 \u043F\u043E\u043B\u0435\u0439.\r\n     * @param {Object} data - \u0434\u0430\u043D\u043D\u044B\u0435 \u0444\u043E\u0440\u043C\u044B.\r\n     * @returns {Array} \u043C\u0430\u0441\u0441\u0438\u0432 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u043E\u0431 \u043E\u0448\u0438\u0431\u043A\u0430\u0445.\r\n     */\r\n    validateForm(fields, data) {\r\n        const errors = [];\r\n        fields.forEach(field => {\r\n            const { fieldName, validation } = field;\r\n            const value = data[fieldName];\r\n            if (validation) {\r\n                if (validation.required && !value) {\r\n                    errors.push(`${fieldName} is required.`);\r\n                }\r\n                if (validation.regex && !validation.regex.test(value)) {\r\n                    errors.push(`${fieldName} has an invalid format.`);\r\n                }\r\n            }\r\n        });\r\n        return errors;\r\n    }\r\n}\r\n", "import { JsonArrConfig } from '../../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../../modules/BuildField.js';\r\n\r\nexport class EditBalance {\r\n\r\n    constructor() {\r\n        // \u041E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0435\u043C \u043F\u043E\u043B\u044F \u0444\u043E\u0440\u043C\u044B \u0431\u0430\u043B\u0430\u043D\u0441\u0430\r\n        this.formFields = [\r\n            { fieldName: 'units', fieldType: 'number' },\r\n            { fieldName: 'crystals', fieldType: 'number' }\r\n        ];\r\n\r\n        // \u0421\u043E\u0437\u0434\u0430\u0435\u043C \u044D\u043A\u0437\u0435\u043C\u043F\u043B\u044F\u0440\u044B \u0432\u0441\u043F\u043E\u043C\u043E\u0433\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u043B\u0430\u0441\u0441\u043E\u0432\r\n        this.buildField = new BuildField(this);\r\n        this.jsonArrConfig = new JsonArrConfig(\r\n            this.formFields.map(f => f.fieldName),\r\n            this.submitHandler.bind(this),\r\n            this.buildField\r\n        );\r\n        // \u0420\u0435\u0436\u0438\u043C \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0441\u0442\u0440\u043E\u043A \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D, \u0442\u0430\u043A \u043A\u0430\u043A \u0431\u0430\u043B\u0430\u043D\u0441 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044F \u043A\u0430\u043A \u043E\u0431\u044A\u0435\u043A\u0442\r\n        this.jsonArrConfig.setEditRows(false);\r\n    }\r\n\r\n    /**\r\n     * \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0434\u0430\u043D\u043D\u044B\u0445 \u0431\u0430\u043B\u0430\u043D\u0441\u0430.\r\n     * \u041E\u0436\u0438\u0434\u0430\u0435\u0442 \u0443\u0441\u043F\u0435\u0448\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442 \u043E\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438, \u0432 \u0441\u043B\u0443\u0447\u0430\u0435 \u0443\u0441\u043F\u0435\u0445\u0430, \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u044F\u0435\u0442 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F, \u0437\u0430\u043A\u0440\u044B\u0432\u0430\u0435\u0442 \u043E\u043A\u043D\u043E \u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u0442 \u043F\u0440\u043E\u0444\u0438\u043B\u044C.\r\n     * @param {Object} button - \u041A\u043D\u043E\u043F\u043A\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0441 \u043C\u0435\u0442\u043E\u0434\u043E\u043C notify \u0434\u043B\u044F \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u0439.\r\n     * @param {string} user - \u041B\u043E\u0433\u0438\u043D \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F, \u0447\u0435\u0439 \u0431\u0430\u043B\u0430\u043D\u0441 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044F.\r\n     */\r\n    async submitHandler(button, user) {\r\n        try {\r\n            const answer = await this.jsonArrConfig.updateJsonConfig(\"balance\");\r\n            button.notify(answer.message, answer.type);\r\n\r\n            if (answer.success) {\r\n                // \u0422\u043E\u043B\u044C\u043A\u043E \u043F\u0440\u0438 \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u043C \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0438 \u0437\u0430\u043A\u0440\u044B\u0432\u0430\u0435\u043C \u043E\u043A\u043D\u043E \u0438 \u043E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u043F\u0440\u043E\u0444\u0438\u043B\u044C\r\n                setTimeout(() => {\r\n                    $(\"#dialog\").dialog('close');\r\n                    foxEngine.user.showUserProfile(user);\r\n                }, 500);\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred during submission:', error.message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u041E\u0442\u043A\u0440\u044B\u0432\u0430\u0435\u0442 \u043E\u043A\u043D\u043E \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0431\u0430\u043B\u0430\u043D\u0441\u0430.\r\n     * \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0435 \u0431\u0430\u043B\u0430\u043D\u0441\u0430 \u0434\u043B\u044F \u0443\u043A\u0430\u0437\u0430\u043D\u043D\u043E\u0433\u043E \u043B\u043E\u0433\u0438\u043D\u0430 \u0438 \u043F\u0435\u0440\u0435\u0434\u0430\u0451\u0442 \u0438\u0445 \u0432 \u043E\u043A\u043D\u043E \u0444\u043E\u0440\u043C\u044B.\r\n     * @param {string} login - \u041B\u043E\u0433\u0438\u043D \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F.\r\n     */\r\n    async openEditWindow(login) {\r\n        if (!login) {\r\n            console.error('Login \u043D\u0435 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435 \u0431\u0430\u043B\u0430\u043D\u0441\u0430 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\r\n            const userBalance = await this.loadUserBalance(login);\r\n            if (!userBalance || !Array.isArray(userBalance)) {\r\n                console.error('\u041D\u0435\u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u0439 \u043E\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', userBalance);\r\n                return;\r\n            }\r\n\r\n            // \u0421\u043E\u0437\u0434\u0430\u0435\u043C \u043E\u0431\u044A\u0435\u043A\u0442 \u0441 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0431\u0430\u043B\u0430\u043D\u0441\u0430\r\n            const balanceData = {\r\n                units: userBalance.find(item => item.units)?.units || 0,\r\n                crystals: userBalance.find(item => item.crystals)?.crystals || 0\r\n            };\r\n\r\n            console.log('Form data being passed to openFormWindow:', balanceData);  // \u041B\u043E\u0433\u0438\u0440\u0443\u0435\u043C \u0434\u0430\u043D\u043D\u044B\u0435\r\n\r\n            // \u041E\u0442\u043A\u0440\u044B\u0432\u0430\u0435\u043C \u043E\u043A\u043D\u043E \u0444\u043E\u0440\u043C\u044B \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0441 \u043F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0438 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u0430\u043C\u0438 \u0434\u043B\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430\r\n            this.jsonArrConfig.openFormWindow(\r\n                [balanceData], // \u041E\u0431\u043E\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043C \u043E\u0431\u044A\u0435\u043A\u0442 \u0432 \u043C\u0430\u0441\u0441\u0438\u0432, \u0447\u0442\u043E\u0431\u044B \u0444\u043E\u0440\u043C\u0430 \u043C\u043E\u0433\u043B\u0430 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\r\n                login,\r\n                { admPanel: \"editUserBalance\", userLogin: login }\r\n            );\r\n        } catch (error) {\r\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u0431\u0430\u043B\u0430\u043D\u0441\u0430:', error.message);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0431\u0430\u043B\u0430\u043D\u0441 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\r\n     * @param {string} login - \u041B\u043E\u0433\u0438\u043D \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F.\r\n     * @returns {Promise<Object>} \u0414\u0430\u043D\u043D\u044B\u0435 \u0431\u0430\u043B\u0430\u043D\u0441\u0430.\r\n     */\r\n    async loadUserBalance(login) {\r\n        try {\r\n            const balance = await foxEngine.sendPostAndGetAnswer(\r\n                { admPanel: \"loadUserBalance\", userLogin: login },\r\n                \"JSON\"\r\n            );\r\n            console.log('Loaded user balance:', balance);  // \u041B\u043E\u0433\u0438\u0440\u0443\u0435\u043C \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\r\n            return balance;\r\n        } catch (error) {\r\n            console.error(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438 \u0431\u0430\u043B\u0430\u043D\u0441\u0430 \u0434\u043B\u044F ${login}:`, error.message);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n", "import { JsonArrConfig } from '../../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../../modules/BuildField.js';\r\n\r\nexport class EditBadges {\r\n\tconstructor() {\r\n\t\tthis.allBadges = [];\r\n\t\tthis.formFields = [\r\n\t\t\t{ fieldName: 'badgeName', fieldType: 'dropdown', optionsArray: this.allBadges },\r\n\t\t\t{ fieldName: 'acquiredDate', fieldType: 'date' },\r\n\t\t\t{ fieldName: 'description', fieldType: 'text' }\r\n\t\t];\r\n\r\n\t\tthis.buildField = new BuildField(this);\r\n\t\tthis.jsonArrConfig = new JsonArrConfig(\r\n\t\t\t[\"badgeName\", \"acquiredDate\", \"description\"], \r\n\t\t\tthis.submitHandler.bind(this), \r\n\t\t\tthis.buildField\r\n\t\t);\r\n\t}\r\n\r\n\tasync loadBadgesConfig(button, data, user) {\r\n\t\tif (data) {\r\n\t\t\tthis.jsonArrConfig.openModsInfoWindow(data, user);\r\n\t\t} else {\r\n\t\t\tbutton.notify(`${user} has no badges!`, \"warn\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync getAllBadges() {\r\n\t\tconst response = await foxEngine.sendPostAndGetAnswer(\r\n\t\t\t{ admPanel: \"getAllBadges\" }, \r\n\t\t\t\"JSON\"\r\n\t\t);\r\n\r\n\t\tif (Array.isArray(response)) {\r\n\t\t\tthis.allBadges = response.map(badge => badge.badgeName);\r\n\t\t\tconsole.log(\"[BadgeManager] Returning badge names:\", this.allBadges);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"[BadgeManager] Unexpected response format:\", response);\r\n\t\t\tthis.allBadges = [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync openEditWindow(login) {\r\n\t\tif (!this.allBadges.length) {\r\n\t\t\tawait this.getAllBadges();\r\n\t\t}\r\n\r\n\t\tthis.formFields.forEach(field => {\r\n\t\t\tif (field.fieldName === 'badgeName') {\r\n\t\t\t\tfield.optionsArray = this.allBadges;\r\n\t\t\t} \r\n\t\t});\r\n\r\n\t\tif (login) {\r\n\t\t\ttry {\r\n\t\t\t\tconst badgesArray = await foxEngine.user.badgeManager.getBadgesArray(login);\r\n\t\t\t\tconsole.log(badgesArray);\r\n\t\t\t\tthis.jsonArrConfig.openFormWindow(\r\n\t\t\t\t\tbadgesArray, \r\n\t\t\t\t\tlogin, \r\n\t\t\t\t\t{ admPanel: \"editUserBadges\", userLogin: login }\r\n\t\t\t\t);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('An error occurred:', error.message);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.error('Login is undefined');\r\n\t\t}\r\n\t}\r\n\r\n\tasync submitHandler(button, user) {\r\n\t\tconst answer = await this.jsonArrConfig.updateJsonConfig(\"badges\");\r\n\t\tbutton.notify(answer.message, answer.type);\r\n\r\n\t\tsetTimeout(async () => {\r\n\t\t\tfoxEngine.modalApp.closeModalApp()\r\n\t\t\tfoxEngine.user.showUserProfile(user);\r\n\r\n\t\t\t//setTimeout(() => {\r\n\t\t\t\t//foxEngine.user.parseBadges(user);\r\n\t\t\t//}, 500);\r\n\t\t}, 500);\r\n\t}\r\n}", "import {JsonArrConfig} from '../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../modules/BuildField.js';\r\nimport { EditBalance } from './userOptions/EditBalance.js';\r\nimport { EditBadges }  from './userOptions/EditBadges.js';\r\n\r\nexport class Users {\r\n    constructor(adminPanel) {\r\n\t\tthis.adminPanel = adminPanel;\r\n        this.userArr = [];\r\n\t\tthis.allBadges = [];\r\n\t\tthis.contentAdded = false;\r\n\t\tthis.editBadges = new EditBadges();\r\n\t\tthis.editBalance = new EditBalance();\r\n        this.dialogOptions = {\r\n            autoOpen: false,\r\n            position: {\r\n                my: 'center',\r\n                at: 'center',\r\n                of: window\r\n            },\r\n            modal: true,\r\n            height: 'auto',\r\n            width: 600,\r\n            resizable: false,\r\n            open: function(event, ui) {\r\n\r\n            }\r\n        };\r\n    }\r\n\r\nasync parseUsers(input = '*') {\r\n    try {\r\n        if (input === \"\") {\r\n            input = '*';\r\n        }\r\n\r\n        if (!this.contentAdded) {\r\n            this.addContent();\r\n            this.contentAdded = true;\r\n        }\r\n\r\n        let usersArray = await foxEngine.sendPostAndGetAnswer({\r\n            admPanel: \"usersList\",\r\n            userMask: input\r\n        }, \"JSON\");\r\n\r\n        $(\"#usersList\").html(\"\");\r\n\r\n        if (usersArray !== null) {\r\n            let userTpl = this.adminPanel.templateCache[\"userRow\"];\r\n\r\n            for (let j = 0; j < usersArray.length; j++) {\r\n                let singleUser = usersArray.at(j);\r\n                let login = singleUser[j].login;\r\n                let email = singleUser[j].email;\r\n                let lastdate = singleUser[j].last_date;\r\n                let avatar = singleUser[j].profilePhoto;\r\n                let badges = singleUser[j].badges;\r\n\r\n                this.userArr[login] = {\r\n                    email,\r\n                    lastdate,\r\n                    badges\r\n                };\r\n\r\n                let userHtml = await foxEngine.replaceTextInTemplate(userTpl, {\r\n                    index: j,\r\n                    login,\r\n                    avatar,\r\n                    email,\r\n                    lastdate,\r\n                    badges\r\n                });\r\n                $(\"#usersList\").append(userHtml);\r\n            }\r\n\r\n            //Action listeners\r\n\t\t\t$('#usersList').on('click', '.showProfile', async (event) => {\r\n\t\t\t\tconst login = $(event.currentTarget).data('login');\r\n\t\t\t\tif (login) {\r\n\t\t\t\t\tfoxEngine.user.showProfilePopup(login);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('Login is undefined');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$('#usersList').on('click', '.loadUserBadges', async (event) => {\r\n\t\t\t\tconst login = $(event.currentTarget).data('login');\r\n\t\t\t\tif (login) {\r\n\t\t\t\t\tawait adminPanel.users.editBadges.openEditWindow(login);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('Login is undefined');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t$('#usersList').on('click', '.editBalance', async (event) => {\r\n\t\t\t\tconst login = $(event.currentTarget).data('login');\r\n\t\t\t\tif (login) {\r\n\t\t\t\t\tawait adminPanel.users.editBalance.openEditWindow(login);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('Login is undefined');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n        } else {\r\n            const userHtml = `<tr><td colspan=\"4\"><div class=\"alert alert-warning\" role=\"alert\">No Users like <b>${input}</b></div></td></tr>`;\r\n            foxEngine.page.loadData(userHtml, \"#usersList\");\r\n        }\r\n    } catch (error) {\r\n        console.error('An error occurred:', error.message);\r\n    }\r\n}\r\n\r\n\r\n    userTemplate(template, data) {\r\n        return template.replace(/\\${(.*?)}/g, (match, p1) => data[p1.trim()]);\r\n    }\r\n\r\n\t//@Deprecated\r\n    getUserData(login) {\r\n        return this.userArr[login];\r\n    }\r\n\r\n    async addContent() {\r\n        if (!$(\"#adminContent > table\").length) {\r\n\t\tconst contentHtml = this.adminPanel.templateCache[\"userTable\"];\r\n            $(\"#adminContent\").html(contentHtml);\r\n        }\r\n    }\r\n}", "import { JsonArrConfig } from '../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../modules/BuildField.js';\r\n\r\nexport class Permissions {\r\n    constructor(adminPanel) {\r\n\t\tthis.adminPanel = adminPanel;\r\n        this.contentHtml = '';\r\n        this.formFields = [\r\n            { fieldName: 'index', fieldType: 'label' },\r\n            { fieldName: 'groupName', fieldType: 'text' },\r\n            { fieldName: 'permName', fieldType: 'text' },\r\n            { fieldName: 'permValue', fieldType: 'tagify' },\r\n        ];\r\n        this.buildField = new BuildField(this);\r\n        this.isSubmitting = false;\r\n        this.forms = [];\r\n    }\r\n\r\n    async addContent() {\r\n        try {\r\n            const tableTemplate = this.adminPanel.templateCache[\"permTable\"];\r\n            this.contentHtml = tableTemplate;\r\n            $('#adminContent').html(this.contentHtml);\r\n            this.initEventListeners();\r\n        } catch (error) {\r\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u0442\u0430\u0431\u043B\u0438\u0446\u044B:', error);\r\n        }\r\n    }\r\n\r\n    async parsePermissions(input = '*') {\r\n        if (!this.contentHtml) {\r\n            await this.addContent();\r\n        }\r\n\r\n        try {\r\n            const data = await foxEngine.sendPostAndGetAnswer(\r\n                { admPanel: 'showPermissions', userMask: input },\r\n                'JSON'\r\n            );\r\n            const formFieldsHtml = await this.buildField.buildFormFields(data);\r\n            $('#permList').html(formFieldsHtml);\r\n        } catch (error) {\r\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u0438\u043B\u0438 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0435 \u0434\u0430\u043D\u043D\u044B\u0445 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438\u0439:', error);\r\n        }\r\n    }\r\n\r\n    collectFormData() {\r\n        const rows = $('#permList tr');\r\n        const permissionsData = [];\r\n\r\n        rows.each(function () {\r\n            const groupName = $(this).find('input[name=\"groupName\"]').val()?.trim();\r\n            const permName = $(this).find('input[name=\"permName\"]').val()?.trim();\r\n            const permValue = $(this).find('input[name=\"permValue\"]').val()?.trim();\r\n\r\n            if (groupName && permName && permValue) {\r\n                permissionsData.push({ groupName, permName, permValue });\r\n            }\r\n        });\r\n\r\n        return permissionsData;\r\n    }\r\n\r\n\tasync submitForm(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// \u041F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u043A\u043D\u043E\u043F\u043A\u0443 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 (\u0435\u0441\u043B\u0438 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F event.submitter)\r\n\t\tconst submitButton = event.submitter || $(event.target).find('[type=\"submit\"]').get(0);\r\n\r\n\t\tif (!submitButton) {\r\n\t\t\tconsole.error('\u041A\u043D\u043E\u043F\u043A\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044C, \u0447\u0442\u043E \u0444\u043E\u0440\u043C\u0430 \u0438\u043C\u0435\u0435\u0442 \u043A\u043D\u043E\u043F\u043A\u0443 \u0441 type=\"submit\".');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isSubmitting) {\r\n\t\t\tconsole.log('\u0424\u043E\u0440\u043C\u0430 \u0443\u0436\u0435 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u0442\u0441\u044F. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u0434\u043E\u0436\u0434\u0438\u0442\u0435.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.isSubmitting = true;\r\n\r\n\t\tconst formData = this.collectFormData();\r\n\t\tif (formData.length === 0) {\r\n\t\t\talert('\u0424\u043E\u0440\u043C\u0430 \u043F\u0443\u0441\u0442\u0430. \u0417\u0430\u043F\u043E\u043B\u043D\u0438\u0442\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u0434 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u043E\u0439.');\r\n\t\t\tthis.isSubmitting = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsubmitButton.disabled = true;\r\n\t\ttry {\r\n\t\t\tconst response = await foxEngine.sendPostAndGetAnswer(\r\n\t\t\t\t{\r\n\t\t\t\t\tadmPanel: 'editPermissions',\r\n\t\t\t\t\trefreshPage: false,\r\n\t\t\t\t\tplaySound: false,\r\n\t\t\t\t\tpermissions: JSON.stringify(formData),\r\n\t\t\t\t},\r\n\t\t\t\t'JSON'\r\n\t\t\t);\r\n\r\n\t\t\t$(submitButton).notify(response.message, response.type);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0434\u0430\u043D\u043D\u044B\u0445:', error);\r\n\t\t\talert('\u041F\u0440\u043E\u0438\u0437\u043E\u0448\u043B\u0430 \u043E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0435 \u0434\u0430\u043D\u043D\u044B\u0445. \u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0441\u043D\u043E\u0432\u0430 \u043F\u043E\u0437\u0436\u0435.');\r\n\t\t} finally {\r\n\t\t\tsubmitButton.disabled = false;\r\n\t\t\tthis.isSubmitting = false;\r\n\t\t}\r\n\t}\r\n\r\naddRow() {\r\n    // \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043D\u043E\u0432\u043E\u0439 \u0441\u0442\u0440\u043E\u043A\u0438\r\n    const newRow = document.createElement('tr');\r\n\r\n    // \u0413\u0435\u043D\u0435\u0440\u0430\u0446\u0438\u044F \u043F\u043E\u043B\u0435\u0439 \u0434\u043B\u044F \u0441\u0442\u0440\u043E\u043A\u0438\r\n    this.formFields.forEach((field) => {\r\n        const cell = document.createElement('td');\r\n        const inputBlock = document.createElement('div');\r\n        inputBlock.className = 'input_block';\r\n\r\n        // \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 label\r\n        const label = document.createElement('label');\r\n        label.className = 'label';\r\n        label.setAttribute('for', field.fieldName);\r\n        label.textContent = '';\r\n\r\n        // \u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 input \u0438\u043B\u0438 readonly \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0434\u043B\u044F index\r\n        let input;\r\n        if (field.fieldName === 'index') {\r\n            input = document.createElement('span');\r\n            input.textContent = document.querySelectorAll('#permList tr').length + 1; // \u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u043D\u0434\u0435\u043A\u0441\r\n            input.className = 'index';\r\n        } else {\r\n            input = document.createElement('input');\r\n            input.type = field.fieldType === 'tagify' ? 'text' : field.fieldType;\r\n            input.name = field.fieldName;\r\n            input.className = 'input';\r\n            input.value = ''; // \u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E, \u0435\u0441\u043B\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F\r\n        }\r\n\r\n        // \u0421\u0431\u043E\u0440\u043A\u0430 \u0431\u043B\u043E\u043A\u0430\r\n        inputBlock.appendChild(label);\r\n        inputBlock.appendChild(input);\r\n        cell.appendChild(inputBlock);\r\n        newRow.appendChild(cell);\r\n    });\r\n\r\n    // \u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u043A\u043D\u043E\u043F\u043A\u0438 \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F \u0441\u0442\u0440\u043E\u043A\u0438\r\n    const deleteCell = document.createElement('td');\r\n    const deleteButton = document.createElement('button');\r\n    deleteButton.textContent = '\u0423\u0434\u0430\u043B\u0438\u0442\u044C';\r\n    deleteButton.className = 'btn btn-danger btn-sm';\r\n    deleteButton.addEventListener('click', () => this.deleteRow(newRow));\r\n    deleteCell.appendChild(deleteButton);\r\n    newRow.appendChild(deleteCell);\r\n\r\n    // \u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u043E\u043A\u0438 \u0432 \u0442\u0430\u0431\u043B\u0438\u0446\u0443\r\n    const tableBody = document.querySelector('#permList');\r\n    if (tableBody) {\r\n        tableBody.appendChild(newRow);\r\n\r\n        // \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0434\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u043E\u043C\u043F\u043E\u043D\u0435\u043D\u0442\u043E\u0432, \u0435\u0441\u043B\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, Tagify)\r\n        const tagifyInputs = newRow.querySelectorAll('.tagify');\r\n        tagifyInputs.forEach((input) => new Tagify(input));\r\n    } else {\r\n        console.error('#permList \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D.');\r\n    }\r\n}\r\n\r\ndeleteRow(row) {\r\n    const tableBody = document.querySelector('#permList');\r\n    if (tableBody) {\r\n        tableBody.removeChild(row);\r\n\r\n        // \u041E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u0438\u043D\u0434\u0435\u043A\u0441\u043E\u0432\r\n        Array.from(tableBody.querySelectorAll('tr')).forEach((row, index) => {\r\n            const indexSpan = row.querySelector('.index');\r\n            if (indexSpan) {\r\n                indexSpan.textContent = index + 1;\r\n            }\r\n        });\r\n    } else {\r\n        console.error('\u0422\u0430\u0431\u043B\u0438\u0446\u0430 #permList \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430.');\r\n    }\r\n}\r\n\r\n\r\n\r\ninitEventListeners() {\r\n    console.log(\"\u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u043E\u0432 \u0441\u043E\u0431\u044B\u0442\u0438\u0439...\");\r\n    this.formInit(500);\r\n\r\n    const formElement = $('#permissionsForm');\r\n    if (formElement.length > 0) {\r\n        formElement.on('submit', (event) => this.submitForm(event));\r\n    } else {\r\n        console.error('#permissionsForm \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0432 DOM');\r\n    }\r\n\r\n    // \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u0434\u043B\u044F \u043A\u043D\u043E\u043F\u043A\u0438 \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0441\u0442\u0440\u043E\u043A\u0438\r\n    const addRowButton = document.querySelector('#addRowButton');\r\n    if (addRowButton) {\r\n        addRowButton.addEventListener('click', () => this.addRow());\r\n    } else {\r\n        console.warn('\u041A\u043D\u043E\u043F\u043A\u0430 \u0434\u043B\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0441\u0442\u0440\u043E\u043A\u0438 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430.');\r\n    }\r\n}\r\n\r\n\r\n    formInit(awaitms) {\r\n        setTimeout(() => {\r\n            this.forms = document.querySelectorAll('form');\r\n            if (this.forms.length > 0) {\r\n                console.log(`\u041D\u0430\u0439\u0434\u0435\u043D\u043E \u0444\u043E\u0440\u043C: ${this.forms.length}`);\r\n                this.forms.forEach(form => {\r\n                    form.onsubmit = async (event) => {\r\n                        event.preventDefault();\r\n                        try {\r\n                            const data = this.collectFormData();\r\n                            data.formId = form.id;\r\n                            await this.submitForm(event);\r\n                        } catch (error) {\r\n                            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0444\u043E\u0440\u043C\u044B:', error);\r\n                        }\r\n                    };\r\n                });\r\n            } else {\r\n                console.warn('\u0424\u043E\u0440\u043C\u044B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u044B \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0435.');\r\n            }\r\n        }, awaitms);\r\n    }\r\n}  ", "import { JsonArrConfig } from '../../modules/JsonArrConfig.js';\r\n\r\nexport class EditServerMods {\r\n\t\r\n\tconstructor() {\r\n\t\tthis.serverAttributes = [\"modName\", \"modPicture\", \"modDesc\"];\r\n\t\tthis.jsonArrConfig = new JsonArrConfig(this.serverAttributes, this.submitHandler.bind(this));\r\n\t}\r\n\t\r\n\t\r\n\tasync submitHandler(button, serverName) {\r\n        let answer = await this.jsonArrConfig.updateJsonConfig(\"modsInfo\");\r\n        button.notify(answer.message, answer.type);\r\n        if (answer.type === \"success\") {\r\n            setTimeout(() => {\r\n                $(\"#dialog\").dialog('close');\r\n                foxEngine.servers.loadServerPage(serverName);\r\n            }, 500)\r\n        }\r\n    }\r\n\t\r\n\topenModsInfo(responses, serverName){\r\n\t\t$('#viewModsInfoBtn').click(() => {\r\n\t\t\tthis.jsonArrConfig.openFormWindow(responses.modsInfo, responses.serverName, {admPanel: \"editServer\",serverName: serverName});\r\n\t\t});\r\n\t}\r\n}", "import { BuildField } from '../../modules/BuildField.js';\r\nimport { JsonArrConfig } from '../../modules/JsonArrConfig.js';\r\nimport { EditServerMods } from './EditServerMods.js';\r\n\r\nexport class EditServer {\r\n    constructor(serversInstance) {\r\n        this.serversInstance = serversInstance;\r\n        this.formFields = serversInstance.formFields;\r\n\r\n        this.versions = [];\r\n        this.serverPictures = [];\r\n        this.javaVersions = [];\r\n\r\n        this.buildField = new BuildField(this);\r\n        this.jsonArrConfig = new JsonArrConfig();\r\n        this.editServerMods = new EditServerMods();\r\n    }\r\n\r\n    async loadServerOptions(serverName) {\r\n        try {\r\n            await this.loadAllOptions();\r\n            const serverData = await this.getServerData(serverName);\r\n            this.createDialogIfNeeded();\r\n            this.updateFieldOptions();\r\n\r\n            const formHtml = await this.generateFormHtml(serverName, serverData);\r\n            // \u0412\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u043C \u0444\u043E\u0440\u043C\u0443 \u0432 \u0434\u0438\u0430\u043B\u043E\u0433\r\n            this.jsonArrConfig.loadFormIntoDialog(formHtml, serverName);\r\n\r\n            // \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u0441\u0440\u0430\u0437\u0443 \u043F\u043E\u0441\u043B\u0435 \u0432\u0441\u0442\u0430\u0432\u043A\u0438 \u0444\u043E\u0440\u043C\u044B\r\n            this.setupEventListeners(serverName, serverData);\r\n        } catch (error) {\r\n            console.error('An error occurred while loading server options:', error.message);\r\n        }\r\n    }\r\n\r\n    async deleteServer(serverId) {\r\n        const response = await foxEngine.sendPostAndGetAnswer(\r\n            {\r\n\t\t\t\tadmPanel: 'deleteServer', \r\n\t\t\t\tserverId: serverId\r\n\t\t\t},\r\n            'JSON'\r\n        );\r\n\r\n        if (response.type === 'success') {\r\n            setTimeout(() => {\r\n                this.serversInstance.parseServers();\r\n                foxEngine.servers.parseOnline();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    async getServerData(serverName) {\r\n        const query = { admPanel: 'parseServers' };\r\n        if (serverName?.trim()) {\r\n            query.server = `serverName = '${serverName}'`;\r\n        }\r\n        return await foxEngine.sendPostAndGetAnswer(query, 'JSON');\r\n    }\r\n\r\n    createDialogIfNeeded() {\r\n        //if ($('#dialog').length === 0) {\r\n        //    $('body').append('<div id=\"dialog\" title=\"Server Options\"></div>');\r\n        //}\r\n    }\r\n\r\n    async loadAllOptions() {\r\n        const [versions, javaVersions, serverPictures] = await Promise.all([\r\n            this.parseAvailableVersions(),\r\n            this.parseAvailableJava(),\r\n            this.parseAvailablePictures(),\r\n        ]);\r\n\r\n        this.versions = versions;\r\n        this.javaVersions = javaVersions;\r\n        this.serverPictures = serverPictures;\r\n    }\r\n\r\n    async parseAvailableVersions() {\r\n        return await foxEngine.sendPostAndGetAnswer({ admPanel: 'getGameVersions' }, 'JSON');\r\n    }\r\n\r\n    async parseAvailableJava() {\r\n        return await foxEngine.sendPostAndGetAnswer({ admPanel: 'getJavaVersions' }, 'JSON');\r\n    }\r\n\r\n    async parseAvailablePictures() {\r\n        return await foxEngine.sendPostAndGetAnswer({ admPanel: 'getServerPictures' }, 'JSON');\r\n    }\r\n\r\n    updateFieldOptions() {\r\n        for (const field of this.formFields) {\r\n            switch (field.fieldName) {\r\n                case 'serverVersion':\r\n                    field.optionsArray = this.versions;\r\n                    break;\r\n                case 'jreVersion':\r\n                    field.optionsArray = this.javaVersions;\r\n                    break;\r\n                case 'serverImage':\r\n                    field.optionsArray = this.serverPictures;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    async generateFormHtml(serverName, serverData) {\r\n        const serverEndFormTpl = this.serversInstance.adminPanel.templateCache[\"serverEndForm\"];\r\n        const formStart = `<form id=\"serverOptionsForm\" class=\"form-floating\" method=\"POST\" action=\"/\" autocomplete=\"off\">`;\r\n        const formFields = await this.buildField.buildFormFields(serverData);\r\n        const formEnd = await this.serversInstance.adminPanel.foxEngine.replaceTextInTemplate(serverEndFormTpl, {\r\n            serverName: serverName,\r\n            id:         serverData.id\r\n        });\r\n        return formStart + formFields + formEnd;\r\n    }\r\n\r\n    /**\r\n     * \u0423\u0441\u0442\u0430\u043D\u0430\u0432\u043B\u0438\u0432\u0430\u0435\u0442 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u0441\u043E\u0431\u044B\u0442\u0438\u0439 \u0444\u043E\u0440\u043C\u044B.\r\n     * \u0412\u0430\u0436\u043D\u043E: \u043C\u0435\u0442\u043E\u0434 \u0432\u044B\u0437\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u043F\u043E\u0441\u043B\u0435 \u0432\u0441\u0442\u0430\u0432\u043A\u0438 HTML \u0432 \u0434\u0438\u0430\u043B\u043E\u0433.\r\n     */\r\n\tsetupEventListeners(serverName, serverData) {\r\n\t\tsetTimeout(() => {\r\n\t\t\t//const $dialog = $('#dialog');\r\n\t\t\tconst $form = $('#serverOptionsForm');\r\n\r\n\t\t\tif (!$form.length) {\r\n\t\t\t\tconsole.warn('Form element not found for server options.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$('#viewModsInfoBtn').off('click').on('click', () => {\r\n\t\t\t\tconst serverObject = Array.isArray(serverData) ? serverData[0] : serverData;\r\n\t\t\t\tthis.editServerMods.openModsInfo(serverObject, serverName);\r\n\t\t\t});\r\n\r\n\t\t\t$form.off('submit').on('submit', (event) => {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t//$dialog.dialog('close');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.serversInstance.parseServers();\r\n\t\t\t\t\tfoxEngine.servers.parseOnline();\r\n\t\t\t\t}, 500);\r\n\t\t\t});\r\n\r\n\t\t\tconst $serverImageDropdown = $form.find('[name=\"serverImage\"]');\r\n\t\t\tconst $previewImage = $('#previewImage');\r\n\r\n\t\t\tif ($serverImageDropdown.length && $previewImage.length) {\r\n\t\t\t\t$serverImageDropdown.off('change').on('change', (e) => {\r\n\t\t\t\t\tthis.setImage(e.target.value, $previewImage);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tlet img = serverData[0][\"serverImage\"];\r\n\t\t\tthis.setImage(img, $previewImage);\r\n\t\t}, 500);\r\n\t}\r\n\r\n    async openAddServerDialog() {\r\n        try {\r\n            await this.loadAllOptions();\r\n            this.createDialogIfNeeded();\r\n            //$('#dialog').attr('title', '\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440');\r\n            this.updateFieldOptions();\r\n\r\n            const emptyData = {\r\n                id:                 null,\r\n                serverName:         '',\r\n                host:               '',\r\n                port:               '',\r\n                ignoreDirs:         [],\r\n                enabled:            false,\r\n                checkLib:           false,\r\n                serverGroups:       [],\r\n                serverDescription:  '',\r\n                serverVersion:      '',\r\n                jreVersion:         '',\r\n                serverImage:        ''\r\n            };\r\n            const dataArray = [emptyData];\r\n\r\n            const formStart = `<form id=\"serverOptionsForm\" class=\"form-floating\" method=\"POST\" action=\"/\" autocomplete=\"off\">`;\r\n            const nameFieldHtml = `\r\n                <div class=\"form-floating mb-3\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"serverName\" name=\"serverName\" placeholder=\"\u0418\u043C\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430\" value=\"\">\r\n                    <label for=\"serverName\">\u0418\u043C\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430</label>\r\n                </div>\r\n            `;\r\n            const otherFieldsHtml = await this.buildField.buildFormFields(dataArray);\r\n            const serverEndFormTpl = this.serversInstance.adminPanel.templateCache[\"addServerEndForm\"];\r\n            const formEnd = await this.serversInstance.adminPanel.foxEngine.replaceTextInTemplate(serverEndFormTpl, {\r\n                serverName: '',\r\n                id:         ''\r\n            });\r\n\r\n            const fullHtml = formStart + nameFieldHtml + otherFieldsHtml + formEnd;\r\n            this.jsonArrConfig.loadFormIntoDialog(fullHtml, 'new');\r\n\r\n            // \u041F\u0440\u0438\u0432\u044F\u0437\u044B\u0432\u0430\u0435\u043C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A\u0438 \u0441\u043E\u0431\u044B\u0442\u0438\u0439 \u0441\u0440\u0430\u0437\u0443 \u043F\u043E\u0441\u043B\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438 \u0444\u043E\u0440\u043C\u044B\r\n            this.setupEventListeners('new', dataArray);\r\n        } catch (error) {\r\n            console.error('\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0442\u043A\u0440\u044B\u0442\u0438\u0438 \u043E\u043A\u043D\u0430 \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u0430:', error);\r\n        }\r\n    }\r\n\r\n    setImage(imageUrl, $previewImage) {\r\n        if (!($previewImage instanceof jQuery)) {\r\n            $previewImage = $('#previewImage');\r\n        }\r\n        if (imageUrl) {\r\n            $previewImage.attr('src', imageUrl).css('display', 'block');\r\n        } else {\r\n            $previewImage.attr('src', '').css('display', 'none');\r\n        }\r\n    }\r\n}\r\n", "/**\r\n * @fileoverview FoxesWorld for FoxesCraft\r\n * \r\n * \u042D\u0442\u043E\u0442 \u0444\u0430\u0439\u043B \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u043A\u043B\u0430\u0441\u0441 Servers, \u043A\u043E\u0442\u043E\u0440\u044B\u0439 \u043E\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043C\u0438 \u0432 FoxesCraft.\r\n * \u041E\u043D \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u0442 \u043C\u0435\u0442\u043E\u0434\u044B \u0434\u043B\u044F \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438, \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0438 \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0441\u0435\u0440\u0432\u0435\u0440\u043E\u0432, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0444\u043E\u0440\u043C \u0438 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0432\u0432\u043E\u0434\u0430.\r\n * \r\n * Authors: FoxesWorld\r\n * Date: [10.05.24]\r\n * Version: [1.8.8]\r\n */\r\nimport { EditServer } from './serverOptions/EditServer.js'; \r\n\r\nexport class Servers {\r\n    constructor(adminPanel) {\r\n\t\tthis.adminPanel = adminPanel;\r\n\t\t\r\n\t\tthis.formFields = [\r\n            { fieldName: 'host', fieldType: 'text' },\r\n            { fieldName: 'port', fieldType: 'number' },\r\n            { fieldName: 'ignoreDirs', fieldType: 'tagify' },\r\n            { fieldName: 'enabled', fieldType: 'checkbox' },\r\n            { fieldName: 'checkLib', fieldType: 'checkbox' },\r\n            { fieldName: 'serverGroups', fieldType: 'tagify' },\r\n            { fieldName: 'serverDescription', fieldType: 'textarea' },\r\n            { fieldName: 'serverVersion', fieldType: 'dropdown', optionsArray: this.versions },\r\n            { fieldName: 'jreVersion', fieldType: 'dropdown', optionsArray: this.javaVersions },\r\n            { fieldName: 'serverImage', fieldType: 'dropdown', optionsArray: this.serverPictures },\r\n        ];\r\n\t\t\r\n\t\tthis.editServer = new EditServer(this);\r\n    }\r\n\r\n    async getServerData(server) {\r\n        const query = {\r\n            admPanel: \"parseServers\"\r\n        };\r\n\r\n        if (server && server.trim() !== \"\") {\r\n            query.server = `serverName = '${server}'`;\r\n        }\r\n\r\n        return await foxEngine.sendPostAndGetAnswer(query, \"JSON\");\r\n    }\r\n\r\n    async parseServers() {\r\n        try {\r\n            const servers = await this.getServerData(\"\");\r\n\r\n            if (servers.length > 0) {\r\n                await this.displayServers(servers);\r\n            } else {\r\n                const noServersHtml = this.adminPanel.templateCache[\"noServers\"];\r\n                foxEngine.page.loadData(noServersHtml, \"#adminContent\");\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error.message);\r\n        }\r\n    }\r\n\r\n\tasync displayServers(servers) {\r\n\t\tconst serversList = $(\"#serversList\");\r\n\t\tserversList.html(\"\");\r\n\t\tconst serverRowTpl = this.adminPanel.templateCache[\"serverRow\"];\r\n\r\n\t\tfor (let index = 0; index < servers.length; index++) {\r\n\t\t\tconst server = servers[index];\r\n\t\t\tlet icon;\r\n\t\t\tif (server.enabled == \"true\") {\r\n\t\t\t\ticon = `<i style=\"color: green\" class=\"fa-thin fa-check\"></i>`;\r\n\t\t\t} else {\r\n\t\t\t\ticon = `<i style=\"color: red\" class=\"fa-regular fa-xmark-large fa-fw\"></i>`;\r\n\t\t\t}\r\n\t\t\tconst serverHtml = await foxEngine.replaceTextInTemplate(serverRowTpl, {\r\n\t\t\t\tindex: server.id, //index + 1\r\n\t\t\t\tserverName: server.serverName,\r\n\t\t\t\tserverVersion: server.serverVersion,\r\n\t\t\t\tserverVstyle: server.serverVersion.split('-')[0].replaceAll('.', ''),\r\n\t\t\t\tserverDescription: server.serverDescription,\r\n\t\t\t\tenabled: icon,\r\n\t\t\t\tserverGroups: server.serverGroups\r\n\t\t\t});\r\n\r\n\t\t\tserversList.append(serverHtml);\r\n\t\t}\r\n\t\t\t$('.editServerButt').click((event) => {\r\n\t\t\t\tconst serverName = $(event.currentTarget).attr('data-serverName');\r\n\t\t\t\tthis.editServer.loadServerOptions(serverName);\r\n\t\t\t});\r\n\r\n\t\t\t$('.deleteServerButt').click((event) => {\r\n\t\t\t\tconsole.log($(event.currentTarget).attr('data-id'));\r\n\t\t\t\tconst serverName = $(event.currentTarget).attr('data-serverName');\r\n\t\t\t\tconst serverId =   $(event.currentTarget).attr('data-serverId');\r\n\t\t\t\t\r\n\r\n\t\t\t\tfoxEngine.confirmDialog?.(\r\n\t\t\t\t\t`\u0412\u044B \u0443\u0432\u0435\u0440\u0435\u043D\u044B, \u0447\u0442\u043E \u0445\u043E\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440 <b>${serverName}</b>?`,\r\n\t\t\t\t\tasync () => {\r\n\t\t\t\t\t\tthis.editServer.deleteServer(serverId);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F\",\r\n\t\t\t\t\t\tconfirmText: \"\u0423\u0434\u0430\u043B\u0438\u0442\u044C\",\r\n\t\t\t\t\t\tcancelText: \"\u041E\u0442\u043C\u0435\u043D\u0430\"\r\n\t\t\t\t\t}\r\n\t\t\t\t) || (confirm(`\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u0435\u0440\u0432\u0435\u0440 ${serverName}?`) && this.editServer.deleteServer(serverId));\r\n\t\t\t});\r\n\r\n\t\t\t\r\n\t\t\t$(\"#addServerButton\").click((event) => {\r\n\t\t\t\tthis.editServer.openAddServerDialog();\r\n\t\t\t});\r\n\t}\r\n\r\n    async addContent() {\r\n        const adminContent = $(\"#adminContent\");\r\n        adminContent.html(\" \");\r\n\r\n        if (!adminContent.find(\"> table\").length) {\r\n            const tableHeader = this.adminPanel.templateCache[\"serversTable\"];\r\n            adminContent.html(tableHeader);\r\n        }\r\n    }\r\n}", "import { JsonArrConfig } from '../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../modules/BuildField.js';\r\n\r\nexport class EditInfoBox {\r\n\tconstructor(adminPanel) {\r\n\t\tthis.formFields = [\r\n\t\t\t{ fieldName: 'group_name', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'start_timestamp', fieldType: 'date' },\r\n\t\t\t{ fieldName: 'end_timestamp', fieldType: 'date' },\r\n\t\t\t{ fieldName: 'title', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'text', fieldType: 'textarea' },\r\n\t\t\t{ fieldName: 'image', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'button_text', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'button_url', fieldType: 'text' }\r\n\t\t];\r\n\r\n\t\tthis.buildField = new BuildField(this);\r\n\t\tthis.jsonArrConfig = new JsonArrConfig(\r\n\t\t\tthis.formFields.map(f => f.fieldName),\r\n\t\t\tthis.submitHandler.bind(this),\r\n\t\t\tthis.buildField\r\n\t\t);\r\n\t}\r\n\r\n/*\r\n\tasync loadInfoBoxConfig(button, data, user) {\r\n\t\tif (data) {\r\n\t\t\tthis.jsonArrConfig.openModsInfoWindow(data, user);\r\n\t\t} else {\r\n\t\t\tbutton.notify(`${user} has no infobox configuration!`, \"warn\");\r\n\t\t}\r\n\t}\r\n\t*/\r\n\r\nasync openEditWindow() {\r\n    try {\r\n        console.log(\"\u0417\u0430\u043F\u0440\u043E\u0441 \u043D\u0430 \u0441\u0435\u0440\u0432\u0435\u0440...\");\r\n        const infoBoxArray = await foxEngine.sendPostAndGetAnswer(\r\n            { sysRequest: \"infoBox\"}, \r\n            \"JSON\"\r\n        );\r\n\r\n        console.log(\"\u041E\u0442\u0432\u0435\u0442 \u043E\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\", infoBoxArray);\r\n\r\n        if (infoBoxArray && Array.isArray(infoBoxArray) && infoBoxArray.length > 0) {\r\n            this.jsonArrConfig.openFormWindow(\r\n                infoBoxArray,\r\n                \"InfoBox\",\r\n                { admPanel: \"infoBoxUpdate\" }\r\n            );\r\n        } else {\r\n            console.warn(\"\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F\");\r\n        }\r\n    } catch (error) {\r\n        console.error('An error occurred while loading infobox:', error.message);\r\n    }\r\n}\r\n\r\n\tasync submitHandler(button, user) {\r\n\t\tconst answer = await this.jsonArrConfig.updateJsonConfig(\"infoBoxUpdate\");\r\n\t\tbutton.notify(answer.message, answer.type);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tfoxEngine.modalApp.closeModalApp();\r\n\t\t\t//foxEngine.user.showUserProfile(user);\r\n\t\t}, 500);\r\n\t}\r\n}\r\n", "import { JsonArrConfig } from '../modules/JsonArrConfig.js';\r\nimport { BuildField } from '../modules/BuildField.js';\r\n\r\nexport class EditAllBadges {\r\n\t\r\n\tconstructor(adminPanel){\r\n\t\tthis.adminPanel = adminPanel;\r\n\t\tthis.formFields = [\r\n\t\t\t{ fieldName: 'badgeName', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'description', fieldType: 'text' },\r\n\t\t\t{ fieldName: 'img', fieldType: 'text' }\r\n\t\t];\r\n\t\t\r\n\t\tthis.buildField = new BuildField(this);\r\n\t\tthis.jsonArrConfig = new JsonArrConfig(\r\n\t\t\tthis.formFields.map(f => f.fieldName),\r\n\t\t\tthis.submitHandler.bind(this),\r\n\t\t\tthis.buildField\r\n\t\t);\r\n\t}\r\n\t\r\n\tasync openEditWindow() {\r\n    try {\r\n        console.log(\"\u0417\u0430\u043F\u0440\u043E\u0441 \u043D\u0430 \u0441\u0435\u0440\u0432\u0435\u0440...\");\r\n        const allBadgesArray = await foxEngine.sendPostAndGetAnswer(\r\n            { admPanel: \"getAllBadges\" }, \r\n            \"JSON\"\r\n        );\r\n\r\n        console.log(\"\u041E\u0442\u0432\u0435\u0442 \u043E\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:\", allBadgesArray);\r\n\r\n        if (allBadgesArray && Array.isArray(allBadgesArray) && allBadgesArray.length > 0) {\r\n            this.jsonArrConfig.openFormWindow(\r\n                allBadgesArray,\r\n                \"AllBadges\",\r\n                { admPanel: \"allBadgesUpdate\" }\r\n            );\r\n        } else {\r\n            console.warn(\"\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u043E\u0442\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F\");\r\n        }\r\n    } catch (error) {\r\n        console.error('An error occurred while loading infobox:', error.message);\r\n    }\r\n}\r\n\r\n\tasync submitHandler(button, user) {\r\n\t\tconst answer = await this.jsonArrConfig.updateJsonConfig(\"allBadgesUpdate\");\r\n\t\tbutton.notify(answer.message, answer.type);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tfoxEngine.modalApp.closeModalApp();\r\n\t\t\t//foxEngine.user.showUserProfile(user);\r\n\t\t}, 500);\r\n\t}\r\n\t\r\n}", "\r\n\timport { Settings } from \"./options/Settings.js\";\r\n\timport { Users } from \"./options/Users.js\";\r\n\timport { Permissions } from \"./options/Permissions.js\";\r\n\timport { Servers } from \"./options/Servers.js\";\r\n\timport { EditInfoBox } from \"./options/EditInfoBox.js\";\r\n\timport { EditAllBadges } from \"./options/EditAllBadges.js\";\r\n\r\nclass AdminPanel {\r\n\r\n\tconstructor(foxEngine, templateConfig){\r\n\t\tthis.foxEngine = foxEngine;\r\n\t\tthis.templateConfig = templateConfig;\r\n\t\tthis.loadAdminTemplates();\r\n\t\tthis.selectoption = {thisAdmoption: \"\",thatAdmoption: \"\"}\r\n\t\tthis.settings = new Settings();\r\n\t\tthis.users = new Users(this);\r\n\t\tthis.permissions = new Permissions(this);\r\n\t\tthis.servers = new Servers(this);\r\n\t\tthis.editInfoBox = new EditInfoBox(this);\r\n\t\tthis.editAllBadges = new EditAllBadges(this);\t\t\r\n\t}\r\n\t\r\n\tsetAdmOption(option) {\r\n        $(\".admOpt-\" + option).addClass(\"active\");\r\n        if (option != this.selectoption.thisAdmoption) {\r\n           this.selectoption.thatAdmoption = this.selectoption.thisAdmoption;\r\n            $(\".admOpt-\" +this.selectoption.thatAdmoption).removeClass(\"active\");\r\n        }\r\n       this.selectoption.thisAdmoption = option;\r\n\t\tthis.foxEngine.foxesInputHandler.formInit(500);\r\n    };\r\n\t\r\n\tasync loadAdmOpt(option){\r\n\t\teval(\"this.\"+option+\".parse\"+this.capitalizeFirstLetter(option)+\"();\");\r\n\t\teval(\"this.\"+option+\".addContent();\");\r\n\t\tthis.setAdmOption(option);\t\r\n\t};\r\n\t\r\n\tcapitalizeFirstLetter(string) {\r\n\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n\t}\r\n\t\r\nasync loadAdminTemplates() {\r\n    const templates = this.templateConfig.templates;\r\n    if (!templates) {\r\n        this.foxEngine.log(\"\u041D\u0435\u0442 \u043F\u0443\u0442\u0435\u0439 \u0434\u043E \u0448\u0430\u0431\u043B\u043E\u043D\u043E\u0432 \u0432 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\", \"WARN\");\r\n        return;\r\n    }\r\n\r\n    if (!this.templateCache) {\r\n        this.templateCache = {};\r\n    }\r\n\r\n    const self = this;\r\n    const templatePromises = Object.entries(templates).map(async ([key, path]) => {\r\n        try {\r\n            const rawHtml = await this.foxEngine.loadTemplate(path, true);\r\n            //const html = await this.foxEngine.entryReplacer.replaceText(rawHtml);\r\n            self.templateCache[key] = rawHtml;\r\n\r\n            this.foxEngine.log(`\u0428\u0430\u0431\u043B\u043E\u043D \u0430\u0434\u043C\u0438\u043D\u043F\u0430\u043D\u0435\u043B\u0438 ${key} \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D`);\r\n        } catch (error) {\r\n            this.foxEngine.log(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u0434\u043B\u044F \"${key}\" \u0441 \u043F\u0443\u0442\u0451\u043C \"${path}\":`, \"ERROR\");\r\n        }\r\n    });\r\n\r\n    await Promise.all(templatePromises);\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\tlet adminTemplates = {\r\n\t\t\"templates\": {\r\n\t\t\t\"userTable\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/users/userTable.tpl\",\r\n\t\t\t\"userRow\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/users/userRow.tpl\",\r\n\t\t\t\"serverRow\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/servers/serverRow.tpl\",\r\n\t\t\t\"serversTable\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/servers/serversTable.tpl\",\r\n\t\t\t\"noServers\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/servers/noServers.tpl\",\r\n\t\t\t\"serverEndForm\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/servers/editServerEnd.tpl\",\r\n\t\t\t\"addServerEndForm\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/servers/addServerEnd.tpl\",\r\n\t\t\t\"permRow\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/permissions/permRow.tpl\",\r\n\t\t\t\"permTable\": \"/templates/\" + replaceData['template'] + \"/foxEngine/admin/permissions/permTable.tpl\"\r\n\t\t}\r\n\t};\r\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\t\tconst adminPanel = new AdminPanel(window.foxEngine, adminTemplates);\r\n\t\twindow.adminPanel = adminPanel;\r\n\t});"],
  "mappings": "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",
  "names": ["option", "adminPanel", "adminPanel", "row", "adminPanel", "adminPanel", "adminPanel", "foxEngine", "option", "adminPanel"]
}
