<useroption>
{
	"optionTitle": "Команда",
	"optionBlock": ".leftAction",
	"optionPreText": "<i class=\"fa fa-question-circle\"></i>",
	"optionGroup": [1,4,5],
	"onLoad": "parseTeam",
	"type": "page"
}
</useroption>

<pageContent>
<style>
.team-area{
    padding-top: 5%;
}
.member{
  box-shadow:0px 7px 7px 2px rgba(0,0,0,0.1);
    background-color: white;
    margin-bottom: 10px;
    margin-left:10px;
    height: 90%;
}
.member:hover .social{
    cursor: pointer;
    opacity: 1;
    transform: rotateY(0deg) scale(1, 1);
}
.img-area{
    overflow: hidden;
    position: relative;
	height: 60%;
}
.img-area img{
    width: 100%;
}
.img-area:hover img{
    transform: scale(1.2)
}
.img-area img{
    transition: all 0.4s ease 0s;
}
@media (max-width: 768px){
    .img-area img{
        display: inline-block;
    }
}
.img-area .social{
    background-color: rgba(0,0,0,0.7);
    position: absolute;
    text-align: center;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    opacity: 0;
    transition: .5s;
	color: white;
    font-size: 11pt;
    transform: rotateY(180deg) scale(0.5, 0.5);
}
.img-area .social ul{
    text-align: center;
    position: relative;
    top: 90px;
}
.img-area .social ul li a{
    border: 1px solid #fff;
    color: #fff;
    display: block;
    font-size: 20px;
    height: 40px;
    width: 40px;
    line-height: 40px;
    text-align: center;
}
.img-area .social ul li a:hover{
    background-color: #fff;
    color: #000;
    border: 1px solid transparent;
}
.img-text{
    padding: 25px;
    color: black;
    text-align: center;
}
.img-text h4{
    margin: 0 0 5px;
    font-size: 30px;
   font-family: sans-serif;
    letter-spacing: 5px;
}
.img-text h5{
    font-size: 17px;
    color: #545154

}
</style>
<script>
	async function parseTeam(key, value){
		let teamHTML;
		getTeamMembers(key, value).then((response) => {
		let responseDecode = JSON.parse(response);
			for(let k=0; k < responseDecode.length; k++){
				let thisMember = responseDecode[k];
				console.log(thisMember.realname);
				teamHTML = `<div class="col-md-4 col-sm-6 col-xs-12" id="team">
        <div class="member">
          <div class="img-area">
            <img src="`+thisMember.profilePhoto+`" class="img-responsive" alt="">
            <div class="social">
              <ul class="list-inline">
                <li>`+thisMember.land+`</li>
              </ul>
            </div>
          </div>
          <div class="img-text">
            <h4>`+thisMember.realname+`</h4>
            <h5>`+thisMember.userStatus+`</h5>
          </div>
        </div>
      </div>`;
	  $("#team").append(teamHTML);
			}
		  })
		  .catch((error) => {
			FoxEngine.debugSend('Произошла ошибка: ' + error.message, "");
		  });
	}
	
	async function getTeamMembers(key, value) {
	  return new Promise(async (resolve, reject) => {
		try {
		  let response = await request.sendPost({
				sysRequest: "selectUsers",
				selectKey: key,
				selectValue: value
			},
			(result) => {
			  console.log(result);
			},
			false
		  );

		  if (response.status === 200) {
			const responseData = await response.text();
			resolve(responseData);
		  } else {
			console.error('HTTP error:', response.status);
			reject(new Error(`HTTP Error: ${response.status}`));
		  }
		} catch (error) {
		  console.error('An error occured:', error.message);
		  reject(error);
		}
	  });
	}
</script>
 <div class="team-area">
  <div class="container">
    <div class="row" id="team">

    </div>
  </div>
</div>
</pageContent>